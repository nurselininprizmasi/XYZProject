/*
 * File: app/view/WindowGiris.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('XYZPro.view.WindowGiris', {
    extend: 'Ext.window.Window',
    alias: 'widget.windowGiris',

    requires: [
        'XYZPro.view.WindowGirisViewModel',
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'windowgiris'
    },
    itemId: 'windowGiris',
    width: 564,
    title: 'Giriş',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            itemId: 'viewGirisFormPanel',
            layout: 'form',
            bodyPadding: 10,
            title: '',
            items: [
                {
                    xtype: 'textfield',
                    reference: 'txtKullaniciAdi',
                    itemId: 'txtKullaniciAdi',
                    fieldLabel: 'Kullanıcı Adı',
                    allowBlank: false
                },
                {
                    xtype: 'textfield',
                    reference: 'txtSifre',
                    itemId: 'txtSifre',
                    fieldLabel: 'Şifre',
                    inputType: 'password',
                    allowBlank: false
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    itemId: 'tbarGiris',
                    layout: {
                        type: 'hbox',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            formBind: true,
                            itemId: 'btnGiris',
                            text: 'Giriş Yap',
                            listeners: {
                                click: 'onBtnGirisClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],

    onBtnGirisClick: function(button, e, eOpts) {

        var successCallBack = function(resp,ops){

        var json = Ext.JSON.decode(resp.responseText);

            debugger;
            //Giriş Başarılı
            if(json.success == true){

                var panel = Ext.ComponentQuery.query('#mainPanel')[0];
                panel.setActiveItem(1);

                var winPanel = Ext.ComponentQuery.query('#windowGiris')[0];
                winPanel.hide();
            }
            //Giriş Başarısız
            else{
                Ext.Msg.alert("HATA","Kullanıcı Adı / Şifre Uyumsuz",resp);
                return;
            }

        };




        var kullanici=Ext.ComponentQuery.query('#txtKullaniciAdi')[0].getValue();
        var sifre=Ext.ComponentQuery.query('#txtSifre')[0].getValue();


        if(kullanici == "" || sifre == "")
        {
            Ext.toast("Kullanıcı Adı ve ya Şifre alanı boş olamaz!");
            return;
        }
        Ext.Ajax.request
        ({
            url: '/kullanici/kullaniciKontrol.ajax',
            params:
            {
                kullaniciAdi:kullanici,
                sifre:sifre
            },
            success: successCallBack


        }) ;


    }

});