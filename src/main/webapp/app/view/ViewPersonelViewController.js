/*
 * File: app/view/ViewPersonelViewController.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('XYZPro.view.ViewPersonelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.viewpersonel',

    loadLookUp: function() {
        //Cinsiyet Bilgilerini içeren lookUp
        Ext.ComponentQuery.query('#cinsiyet')[0].getStore().load({
          params:{
            'ustTanimId': 7
          }
        });

        //Medeni Durum bilgilerini içeren lookUp
        Ext.ComponentQuery.query('#medeni_durum')[0].getStore().load({
          params:{
            'ustTanimId': 10
          }
        });

        //Unvan Bilgilerini içeren lookUp
        Ext.ComponentQuery.query('#unvan_id')[0].getStore().load({
          params:{
            'ustTanimId': 1
          }
        });

        //Uyruk Tanımlarını içeren lookUp
        Ext.ComponentQuery.query('#uyruk')[0].getStore().load({
          params:{
            'ustTanimId': 14
          }
        });

        //Birimleri içerir
        Ext.ComponentQuery.query('#birim_id')[0].getStore().load({

        });


    },

    onGridKisiPanelSelect: function(rowmodel, record, index, eOpts) {
        var rec=record;
        if (rec) {

            var form =Ext.ComponentQuery.query('#kisiBilgiFormPanel')[0];

            form.loadRecord(rec);

            var gridAdres = Ext.ComponentQuery.query('#gridAdresPanel')[0];
            gridAdres.getStore().load({
                params:{
                    'kisiId':rec.data.ID
                }
            });
        }
    },

    onGridKisiPanelRowDblClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        var windowYoneticiAta = Ext.create('XYZPro.view.WindowYoneticiAta',{});
        var kisiId = Ext.ComponentQuery.query('#lblKisiId')[0];
        debugger;
        kisiId.setValue(record.data.ID);

        windowYoneticiAta.show();
    },

    onBtnKaydetClick: function(button, e, eOpts) {
        var form =Ext.ComponentQuery.query('#kisiBilgiFormPanel')[0];
        var grid =Ext.ComponentQuery.query('#gridKisiPanel')[0];


        var cmbBirim = Ext.ComponentQuery.query('#birim_id')[0];
        var birimId = cmbBirim.getValue();

        if(birimId == "" ){
            Ext.toast("Birim alanı boş olamaz!");
            return;
        }

        Ext.Ajax.request({
            url: 'kisi/saveOrUpdateKisi.ajax',

            params:
            {
                data: Ext.encode(form.getForm().getValues())
            },

            success: function(response, opts) {
                var obj = Ext.decode(response.responseText);
                grid.getStore().load();
            },

            failure: function(response, opts) {

            }
        });
    },

    onBtnTemizleClick: function(button, e, eOpts) {
        var form = Ext.ComponentQuery.query('#kisiBilgiFormPanel')[0];
        form.getForm().reset();
        var grid = Ext.ComponentQuery.query('#gridKisiPanel')[0];
        grid.getStore().load();
    },

    onBtnAdresEkleClick: function(button, e, eOpts) {

        var windowAdresEkle = Ext.create('XYZPro.view.WindowAdresEkle',{});

        var gridAdres = Ext.ComponentQuery.query('#gridAdresPanel')[0];
        var kisiId = Ext.ComponentQuery.query('#id')[0].getValue();
        var adresId ="";

        if(gridAdres.getSelection().length>0){
            adresId = gridAdres.getSelection()[0].data.id;
            kisiId = gridAdres.getSelection()[0].data.kisi_id;
        }

        var adresIdComp=Ext.ComponentQuery.query('#adresId')[0];
        adresIdComp.setValue(adresId);
        windowAdresEkle.adresId = adresId;

        var kisiIdComp=Ext.ComponentQuery.query('#kisiId')[0];
        kisiIdComp.setValue(kisiId);
        windowAdresEkle.kisiId = kisiId;


        windowAdresEkle.show();
    },

    onBtnAdresSilClick: function(button, e, eOpts) {
        var gridAdres = Ext.ComponentQuery.query('#gridAdresPanel')[0];
        var kisiId = Ext.ComponentQuery.query('#id')[0];
        var adresId ="";

        if(gridAdres.getSelection().length ==0){
            Ext.toast("Lütfen silinecek kayıt seçiniz!");
            return;
        }
        adresId = gridAdres.getSelection()[0].data.id;

        Ext.Ajax.request({
            url: 'kisi/removeAdresBilgisiByAdresId.ajax',

            params:
            {
                adresId: adresId
            },

            success: function(response, opts) {
                gridAdres.getStore().load({
                    params:{
                        'kisiId':kisiId.getValue()
                    }
                });

            },

            failure: function(response, opts) {

            }
        });



    },

    onBtnAraClick: function(button, e, eOpts) {
        var grid = Ext.ComponentQuery.query('#gridKisiPanel')[0];
        grid.getStore().load({
            params:{
                'ad': Ext.ComponentQuery.query('#txtAd')[0].getValue(),
                'soyad': Ext.ComponentQuery.query('#txtSoyad')[0].getValue(),
                'birim':Ext.ComponentQuery.query('#cmbBirim')[0].getValue()
            }
        });
    },

    onBtnTemizleClick: function(button, e, eOpts) {
        var form = Ext.ComponentQuery.query('#aramaFormPanel')[0];
        form.getForm().reset();
    },

    onViewPersonelAfterRender: function(component, eOpts) {
        this.getView().getController().loadLookUp();
    }

});
